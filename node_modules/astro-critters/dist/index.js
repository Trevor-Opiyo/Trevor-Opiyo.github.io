import f from"critters";import n from"./options/index.js";import o from"files-pipeline/dist/lib/deepmerge.js";import{files as p}from"files-pipeline";import{fileURLToPath as c}from"url";import l from"files-pipeline/dist/lib/apply-to.js";var g=(t={})=>{for(const e in t)Object.prototype.hasOwnProperty.call(t,e)&&t[e]===!0&&(t[e]=n[e]);t=o(n,t);const i=new Set;if(typeof t.path<"u")if(t.path instanceof Array||t.path instanceof Set)for(const e of t.path)i.add(e);else i.add(t.path);return{name:"astro-critters",hooks:{"astro:build:done":async()=>{if(t.critters)for(const e of i){const a=await l(e,r=>r instanceof URL?c(r):r),s=new f(o(t.critters,{path:a instanceof Map?a.keys().next().value:a,logLevel:(()=>{switch(t.logger){case 0:return"silent";case 1:return"silent";case 2:return"info";default:return"info"}})()}));await(await(await(await new p(t.logger).in(e)).by("**/*.html")).not(t.exclude)).pipeline(o(n.pipeline,{wrote:async r=>s.process(r.buffer.toString())}))}}}}};export{g as default};
