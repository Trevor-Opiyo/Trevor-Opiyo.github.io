import p from"critters";import{files as c}from"files-pipe";import m from"files-pipe/dist/lib/apply-to.js";import o from"files-pipe/dist/lib/deepmerge.js";import{fileURLToPath as l}from"url";import n from"./options/index.js";var x=(t={})=>{for(const e in t)Object.prototype.hasOwnProperty.call(t,e)&&t[e]===!0&&(t[e]=n[e]);t=o(n,t);const i=new Set;if(typeof t.path<"u"&&(t.path instanceof Array||t.path instanceof Set))for(const e of t.path)i.add(e);return{name:"astro-critters",hooks:{"astro:build:done":async({dir:e})=>{if(i.size||i.add(e),!!t.critters)for(const s of i){const a=await m(s,r=>r instanceof URL?l(r):r),f=new p(o(t.critters,{path:a instanceof Map?a.keys().next().value:a,logLevel:(()=>{switch(t.logger){case 0:return"silent";case 1:return"silent";case 2:return"info";default:return"info"}})()}));await(await(await(await new c(t.logger).in(s)).by("**/*.html")).not(t.exclude)).pipe(o(n.pipe,{wrote:async r=>f.process(r.buffer.toString())}))}}}}};export{x as default};
