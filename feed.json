{
	"version": "https://jsonfeed.org/version/1.1",
	"user_comment": "This is a Trevor Opiyo's website feed. You can add this to your feed reader using the following URL: https://trevoropiyo.com/feed.json",
	"title": "Trevor Opiyo",
	"home_page_url": "https://trevoropiyo.com/",
	"feed_url": "https://trevoropiyo.com/feed.json",
	"expired": false,
	"authors": [
		{
			"name": "Trevor Opiyo",
			"url": "http://trevoropiyo.com/",
			"avatar": "https://trevoropiyo.com/favicon.png"
		}
	],
	"items": [
		{
			"id": "https://trevoropiyo.com/passmaker",
			"title": "Passmaker",
			"banner_image": "passmaker.png",
			"summary": "My process for creating a password generator",
			"url": "https://trevoropiyo.com/passmaker",
			"date_published": "2022-01-11T23:14:02-06:00",
			"date_modified": "2022-01-29T19:37:48+00:00",
			"content_html": "<b href=\"https://gitlab.com/trevoropiyo/rust-passmaker\"><img src=\"passmaker.png\" width=\"600\"/></b><h1 id=\"passmaker\">Passmaker</h1><p class=\"style\">In May of 2018, Twitter disclosed its <a href=\"https://www.theverge.com/2018/5/3/17316684/twitter-password-bug-security-flaw-exposed-change-now\">largest data breach</a>. Twitter exposed user data in plaintext, an indiscretion that prompted me to conduct my own password security audit. At the time, I stored my passwords in my mind, a place more secure than a plaintext document but conducive to passwords that were short and often reused. Twitter's data breach led me down a rabbit hole into the world of password managers and encouraged me to develop a bespoke solution for generating long, future proof passwords.</p><h2 class=\"style\" id=\"bitwarden\">Bitwarden</h2><p class=\"style\">Bitwarden distinguished itself from other password managers with cross platform availability and an emphasis on security beyond that of its competitors. Bitwarden reinforced their dedication to security by offering <a href=\"https://bitwarden.com/products\">AES 256 bit encryption</a> and conducting <a href=\"https://bitwarden.com/products\">third party security audits</a>. Bitwarden's functionality extends to users of all platforms and skill levels and in turn solidifies itself as a viable solution for most users. Bitwarden is available on MacOS, Windows, Linux, iOS, Android, the terminal, and via browser extension for Safari, Firefox, Edge, and all chrome based browsers. Everyone from the Linux system administrator running a locally hosted implementation of the Bitwarden cli to the Chromebook user may use Bitwarden to store passwords with confidence. This confidence served as my motivation to do the same.</p><h2  class=\"style\" id=\"passmaker\">Passmaker</h2><p class=\"style\">Bitwarden's password storage left nothing to be desired, but a flaw in its password generator presented me with an opportunity. Bitwarden limits generated passwords to 20 characters, which may be sufficient for the current computer landscape but will render the service ineffective in the near future. As computers advance in processing power, they lower the execution time of a simple a brute force attack. Shorter passwords become particularly susceptible to theft with the only deterrence being longer passwords in the present. It was with this knowledge that I designed my own password generator Passmaker. Passmaker gave me the opportunity to design a password generator with an uncapped character limit and learn more about the syntax and standard libraries of <a href=\"https://gitlab.com/trevoropiyo/rust-passmaker\">Rust</a>, <a href=\"https://gitlab.com/trevoropiyo/go-passmaker\">Go</a>, <a href=\"https://gitlab.com/trevoropiyo/java-passmaker\">Java</a>, <a href=\"https://gitlab.com/trevoropiyo/python-passmaker\">Python</a> and <a href=\"https://gitlab.com/trevoropiyo/swift-passmaker\">Swift</a>. I published the resulting programs to my <a href=\"https://gitlab.com/trevoropiyo\">gitlab</a> so that future developers would be able to extend my solutions and improve their own password security.</p>"
		},
		{
			"id": "https://trevoropiyo.com/setting-up-my-website",
			"title": "Setting Up My Website",
			"summary": "My process for creating my static website",
			"url": "https://trevoropiyo.com/setting-up-my-website",
			"date_published": "2021-11-23T23:14:02-06:00",
			"date_modified": "2022-01-29T19:37:48+00:00",
			"content_html": "<h1 id=\"setting-up-my-website\"><a>Setting Up My Website</a></h1><h3 id=\"conception\">Conception</h3><p>At the start of the summer I decided to build myself a website. It has become apparent to me that I needed a website for a few months now, but the infrastructure that I needed to build the site has only recently become available. There are three types of professional development in the computer science industry; networking, skills and accomplishments, and traditional professionalism. On my website, My LinkedIn represents my networking profile, my gitlab displays my general skills and accomplishments, and my Resume provides a traditional way to show my accomplishments. My hope is that this website will grow alongside my career and give me a way to reflect on my accomplishments thus far.</p><h3 id=\"inspiration\">Inspiration</h3><p><a href=\"https://marco.org\" title=\"Marco Arment';s Website\">marco.org</a> and <a href=\"https://daringfireball.net\" title=\"Dave Gruber's Website\">daringfireball.net</a> both served as inspiration when creating my website. Both of these websites are well designed and give good insight in their respective developers. The websites are both <a href=\"https://en.wikipedia.org/wiki/Static_web_page\" title=\"Static webpage Wikipedia Article\">static</a>, meaning that they are organized as a system of HTML and CSS files. These websites include little to no JavaScript and are not web apps. These websites run in every browser and are extremely light on system resources. I wanted to emulate this minimalistic approach to web design in my own website, which led to a number of benefits. My entire website is hosted and visible on <a href=\"https://gitlab.com/trevoropiyo/trevoropiyo.com\" title=\"Trevor Opiyo's Website Repository on gitlab\">a gitlab repository</a> and as changes are made to my website they are visible in my gitlab. Developers in the future can use the website as a reference, or even download the webpage to be viewed offline. All of these features made a static in the style of the two mentioned above the most obvious choice when designing my website.</p><h3 id=\"hosting\">Hosting</h3><p>I settled on <a href=\"https://pages.cloudflare.com\" title=\"Cloudflare Pages Website\">Cloudflare Pages</a> as my web hosting provider. Cloudflare provides a few features that place it above the competition with the most notable being built in security. Cloudflare pages comes with the ability to dictate connection types (SSL/TLS), the ability to mitigate DDOS attacks, and generally survey web analytics. This allows me to monitor my website for attacks and ensure a safe connection for people who view my site. Cloudflare also provides the ability to register domain names and deploy changes to my website from my gitlab repository automatically. This flexibility abstracts away many elements of the web development process while still providing security and a simple interface for deploying my site.</p><h3 id=\"conclusion\">Conclusion</h3><p>I am very happy with the tools I chose to implement my website. The simple static nature of my website means that my website is accessible, loads quickly, and is easily and widely available. The Hosting provided by Cloudflare ensures entry level security and abstracts away the finicky details of server maintenance and website deployment. The inclusion of a <a href=\"https://gitlab.com/trevoropiyo/trevoropiyo.com\" title=\"Trevor Opiyo's Website Repository on GitLab\">GitLab Repository</a> makes it easier to track changes in my website and serves as a resource for myself and future developers.</p>"
		}
	]
}